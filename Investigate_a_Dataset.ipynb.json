{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: Welcome to the Investigate a Dataset project! You will find tips in quoted sections like this to help organize your approach to your investigation. Before submitting your project, it will be a good idea to go back through your report and remove these sections to make the presentation of your work as tidy as possible. First things first, you might want to double-click this Markdown cell and change the title so that it reflects your dataset and investigation.\n",
    "\n",
    "# Project: No Show Appointments\n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='intro'></a>\n",
    "## Introduction\n",
    "\n",
    "> **Tip**: In this section of the report, provide a brief introduction to the dataset you've selected for analysis. At the end of this section, describe the questions that you plan on exploring over the course of the report. Try to build your report around the analysis of at least one dependent variable and three independent variables. If you're not sure what questions to ask, then make sure you familiarize yourself with the dataset, its variables and the dataset context for ideas of what to explore.\n",
    "\n",
    "    The dataset used within this notebook is No Show Appointments from Kaggle. The data gives details of patients within Brazil and whether they attended their medical appointment or not. Additional details for the patients include the neighborhood they're from, whether they have 3 disorders (diabetes, alcoholism, or hypertension), whether they are handicap, age, gender, whether they have Brazilian welfare, and whether they received a text about the appointment. The independent variable for the dataset is \"No-show\" which is a yes or no option that answers the question \"was the patient a no-show\". The columns marked [Scholarship, Diabetes, Hypertension, Alcoholism, Handicap, SMS-Received] are can all be treated as booleans. The 1 value correlates to True and the 0 means False.\n",
    "    \n",
    "    Today we analyze 2 questions. The first, Is the patient's attendance affected by them having Brazilian welfare. The second, is the patient's attendance affected by the age or gender of the patient . The dependent variable is attendance while the 3 independent variables being studied are scholarship status, age, and gender."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import packages\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "% matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load your data and print out a few lines. Perform operations to inspect data\n",
    "#   types and look for instances of missing or possibly errant data.\n",
    "\n",
    "df = pd.read_csv('NoShowAppt.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.105270e+05</td>\n",
       "      <td>1.105270e+05</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "      <td>110527.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.474963e+14</td>\n",
       "      <td>5.675305e+06</td>\n",
       "      <td>37.088874</td>\n",
       "      <td>0.098266</td>\n",
       "      <td>0.197246</td>\n",
       "      <td>0.071865</td>\n",
       "      <td>0.030400</td>\n",
       "      <td>0.022248</td>\n",
       "      <td>0.321026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.560949e+14</td>\n",
       "      <td>7.129575e+04</td>\n",
       "      <td>23.110205</td>\n",
       "      <td>0.297675</td>\n",
       "      <td>0.397921</td>\n",
       "      <td>0.258265</td>\n",
       "      <td>0.171686</td>\n",
       "      <td>0.161543</td>\n",
       "      <td>0.466873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.921784e+04</td>\n",
       "      <td>5.030230e+06</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.172614e+12</td>\n",
       "      <td>5.640286e+06</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.173184e+13</td>\n",
       "      <td>5.680573e+06</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>9.439172e+13</td>\n",
       "      <td>5.725524e+06</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.999816e+14</td>\n",
       "      <td>5.790484e+06</td>\n",
       "      <td>115.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          PatientId  AppointmentID            Age    Scholarship  \\\n",
       "count  1.105270e+05   1.105270e+05  110527.000000  110527.000000   \n",
       "mean   1.474963e+14   5.675305e+06      37.088874       0.098266   \n",
       "std    2.560949e+14   7.129575e+04      23.110205       0.297675   \n",
       "min    3.921784e+04   5.030230e+06      -1.000000       0.000000   \n",
       "25%    4.172614e+12   5.640286e+06      18.000000       0.000000   \n",
       "50%    3.173184e+13   5.680573e+06      37.000000       0.000000   \n",
       "75%    9.439172e+13   5.725524e+06      55.000000       0.000000   \n",
       "max    9.999816e+14   5.790484e+06     115.000000       1.000000   \n",
       "\n",
       "        Hipertension       Diabetes     Alcoholism        Handcap  \\\n",
       "count  110527.000000  110527.000000  110527.000000  110527.000000   \n",
       "mean        0.197246       0.071865       0.030400       0.022248   \n",
       "std         0.397921       0.258265       0.171686       0.161543   \n",
       "min         0.000000       0.000000       0.000000       0.000000   \n",
       "25%         0.000000       0.000000       0.000000       0.000000   \n",
       "50%         0.000000       0.000000       0.000000       0.000000   \n",
       "75%         0.000000       0.000000       0.000000       0.000000   \n",
       "max         1.000000       1.000000       1.000000       4.000000   \n",
       "\n",
       "        SMS_received  \n",
       "count  110527.000000  \n",
       "mean        0.321026  \n",
       "std         0.466873  \n",
       "min         0.000000  \n",
       "25%         0.000000  \n",
       "50%         0.000000  \n",
       "75%         1.000000  \n",
       "max         1.000000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2609, 14)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking for duplicates that may be inaccurate\n",
    "df_dup = df[df.duplicated(['PatientId',\"ScheduledDay\"], keep = False)]\n",
    "df_dup.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Removing Duplicates\n",
    "df_clean = df.drop_duplicates(['PatientId','ScheduledDay'], keep = 'last')\n",
    "df_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((109193, 14), (110527, 14))"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.shape, df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [PatientId, AppointmentID, Gender, ScheduledDay, AppointmentDay, Age, Neighbourhood, Scholarship, Hipertension, Diabetes, Alcoholism, Handcap, SMS_received, No-show]\n",
       "Index: []"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check for duplicate to confirm they were removed\n",
    "df_clean_dup = df_clean[df_clean.duplicated(['PatientId', \"ScheduledDay\"], keep = False)]\n",
    "df_clean_dup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>99832</th>\n",
       "      <td>4.659432e+14</td>\n",
       "      <td>5775010</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-06-06T08:58:13Z</td>\n",
       "      <td>2016-06-06T00:00:00Z</td>\n",
       "      <td>-1</td>\n",
       "      <td>ROMÃO</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "99832  4.659432e+14        5775010      F  2016-06-06T08:58:13Z   \n",
       "\n",
       "             AppointmentDay  Age Neighbourhood  Scholarship  Hipertension  \\\n",
       "99832  2016-06-06T00:00:00Z   -1         ROMÃO            0             0   \n",
       "\n",
       "       Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "99832         0           0        0             0      No  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean[df_clean['Age'] < 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handcap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>No-show</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handcap  SMS_received No-show  \n",
       "0         0           0        0             0      No  \n",
       "1         0           0        0             0      No  \n",
       "2         0           0        0             0      No  \n",
       "3         0           0        0             0      No  \n",
       "4         1           0        0             0      No  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean = df_clean[df_clean['Age'] >= 0 ]\n",
    "df_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((109192, 14), (110527, 14))"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Proof that the data was removed. Showing the change in the data sizes.\n",
    "#Also included code that should create an error\n",
    "df_clean.shape, df.shape\n",
    "#df_clean[df_clean['Age'] < 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_clean.rename(columns = {'No-show': 'NoShow', \"Handcap\" : \"Handicap\"}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "No     87326\n",
       "Yes    21866\n",
       "Name: NoShow, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.NoShow.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.6/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n",
      "/opt/conda/lib/python3.6/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "df_clean.NoShow[df_clean['NoShow'] == 'No'] = 1\n",
    "df_clean.NoShow[df_clean['NoShow'] == 'Yes'] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 109192 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      "PatientId         109192 non-null float64\n",
      "AppointmentID     109192 non-null int64\n",
      "Gender            109192 non-null object\n",
      "ScheduledDay      109192 non-null object\n",
      "AppointmentDay    109192 non-null object\n",
      "Age               109192 non-null int64\n",
      "Neighbourhood     109192 non-null object\n",
      "Scholarship       109192 non-null int64\n",
      "Hipertension      109192 non-null int64\n",
      "Diabetes          109192 non-null int64\n",
      "Alcoholism        109192 non-null int64\n",
      "Handicap          109192 non-null int64\n",
      "SMS_received      109192 non-null int64\n",
      "NoShow            109192 non-null object\n",
      "dtypes: float64(1), int64(8), object(5)\n",
      "memory usage: 12.5+ MB\n"
     ]
    }
   ],
   "source": [
    "#check for missing rows\n",
    "df_clean.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_clean[\"NoShow\"] = pd.to_numeric(df_clean[\"NoShow\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 109192 entries, 0 to 110526\n",
      "Data columns (total 14 columns):\n",
      "PatientId         109192 non-null float64\n",
      "AppointmentID     109192 non-null int64\n",
      "Gender            109192 non-null object\n",
      "ScheduledDay      109192 non-null object\n",
      "AppointmentDay    109192 non-null object\n",
      "Age               109192 non-null int64\n",
      "Neighbourhood     109192 non-null object\n",
      "Scholarship       109192 non-null int64\n",
      "Hipertension      109192 non-null int64\n",
      "Diabetes          109192 non-null int64\n",
      "Alcoholism        109192 non-null int64\n",
      "Handicap          109192 non-null int64\n",
      "SMS_received      109192 non-null int64\n",
      "NoShow            109192 non-null int64\n",
      "dtypes: float64(1), int64(9), object(4)\n",
      "memory usage: 12.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df_clean.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PatientId</th>\n",
       "      <th>AppointmentID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>ScheduledDay</th>\n",
       "      <th>AppointmentDay</th>\n",
       "      <th>Age</th>\n",
       "      <th>Neighbourhood</th>\n",
       "      <th>Scholarship</th>\n",
       "      <th>Hipertension</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Alcoholism</th>\n",
       "      <th>Handicap</th>\n",
       "      <th>SMS_received</th>\n",
       "      <th>NoShow</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.987250e+13</td>\n",
       "      <td>5642903</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T18:38:08Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.589978e+14</td>\n",
       "      <td>5642503</td>\n",
       "      <td>M</td>\n",
       "      <td>2016-04-29T16:08:27Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.262962e+12</td>\n",
       "      <td>5642549</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:19:04Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>62</td>\n",
       "      <td>MATA DA PRAIA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.679512e+11</td>\n",
       "      <td>5642828</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T17:29:31Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>8</td>\n",
       "      <td>PONTAL DE CAMBURI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.841186e+12</td>\n",
       "      <td>5642494</td>\n",
       "      <td>F</td>\n",
       "      <td>2016-04-29T16:07:23Z</td>\n",
       "      <td>2016-04-29T00:00:00Z</td>\n",
       "      <td>56</td>\n",
       "      <td>JARDIM DA PENHA</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PatientId  AppointmentID Gender          ScheduledDay  \\\n",
       "0  2.987250e+13        5642903      F  2016-04-29T18:38:08Z   \n",
       "1  5.589978e+14        5642503      M  2016-04-29T16:08:27Z   \n",
       "2  4.262962e+12        5642549      F  2016-04-29T16:19:04Z   \n",
       "3  8.679512e+11        5642828      F  2016-04-29T17:29:31Z   \n",
       "4  8.841186e+12        5642494      F  2016-04-29T16:07:23Z   \n",
       "\n",
       "         AppointmentDay  Age      Neighbourhood  Scholarship  Hipertension  \\\n",
       "0  2016-04-29T00:00:00Z   62    JARDIM DA PENHA            0             1   \n",
       "1  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             0   \n",
       "2  2016-04-29T00:00:00Z   62      MATA DA PRAIA            0             0   \n",
       "3  2016-04-29T00:00:00Z    8  PONTAL DE CAMBURI            0             0   \n",
       "4  2016-04-29T00:00:00Z   56    JARDIM DA PENHA            0             1   \n",
       "\n",
       "   Diabetes  Alcoholism  Handicap  SMS_received  NoShow  \n",
       "0         0           0         0             0       1  \n",
       "1         0           0         0             0       1  \n",
       "2         0           0         0             0       1  \n",
       "3         0           0         0             0       1  \n",
       "4         1           0         0             0       1  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "#### Clean:\n",
    "- There is a patient with an age less than 1. The patient was removed to increase the integrity of the data. I searched for values less than 0 within the age and removed them from the dataframe\n",
    "- There were duplicate values within the dataframe. I found these values by searching 2 columns (ScheduledDay and PatientID). The ScheduledDay column documents down to the second, so if the patient had the exact same day and time to the second I deduced it was a duplicate. I used drop duplicates to remove the values and used .duplicates and .shape to verify the duplicates were removed.\n",
    "- The No-show column isn't named in a convenient way, so I used the rename function in order to change the name to Noshow. This allows usage of the dot notation.\n",
    "- The column Handcap has a typo and should instead be named Handicap. The rename function is again used to correct the typo.\n",
    "- The values for the NoShow column are yes and no, which is inconsistent with the other columns, so to tidy the dataframe I changed No(attended) to 1 and yes(absent) to 0.\n",
    "- The updated values for the NoShow column were set to objects and had to be updated to int64.\n",
    "- The final cell was to check for missing values. All of the columns have the same amount of non-null values, so there are no rows with missing values.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f807709d550>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_clean.hist(figsize = (12,8));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on the subplots above we can tell:**\n",
    "   * Most of the patients did not have Brazilian Welfare\n",
    "   * Neither alcoholism, diabetes, nor hypertension were common amongst the patients."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Does having welfare vs not having welfare factor in to whether or not the patient attended their appointment?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "Welfare = df_clean[df_clean['Scholarship'] == 1]\n",
    "NoWelfare = df_clean[df_clean['Scholarship'] == 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8076c61f60>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualization of the overall data for those with welfare\n",
    "#shows the distributions of those with it accross the remaining columns\n",
    "#The age distributions between the welfare and non welfare patients have slightly different shapes\n",
    "Welfare.hist(figsize = (10,8));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on the subplots above we can tell:**\n",
    "   * One quarter of those with welfare did not show up to their appointments\n",
    "   * Greater than one third of those with welfare received an SMS message."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8076cccc50>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualization of the overall data for those without welfare\n",
    "#shows the distributions of those without it accross the remaining columns\n",
    "NoWelfare.hist(figsize = (12,8));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on the subplots above we can tell:**\n",
    "  * Less than one quarter of those without welfare were no shows\n",
    "  * Greater than one third received an SMS\n",
    "  * More than 90% of the population without welfare had no documented handicaps"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.8036276481221944, 0.7641245571508484, 0.03950309097134608)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#percent of those without welfare vs those without who attended their appointment\n",
    "NoWelfare.NoShow.mean(), Welfare.NoShow.mean(), NoWelfare.NoShow.mean() - Welfare.NoShow.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Does the patient's age or gender increase the chance of them attending the appointment?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "Women = df_clean[df_clean['Gender'] == 'F']\n",
    "Men = df_clean[df_clean['Gender'] == 'M']\n",
    "def new_cm(x):\n",
    "    '''This function reindexes using patientid'''\n",
    "    y = x['PatientId']\n",
    "    x.reindex(y)\n",
    "new_cm(Women)\n",
    "new_cm(Men)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "w_age = Women['Age'].value_counts()\n",
    "m_age = Men['Age'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8075fd77f0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w_age.plot()\n",
    "m_age.plot()\n",
    "plt.legend(['Women','Men'])\n",
    "plt.title('Count of Attendance by Age and Gender')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Count of Attendance')\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on the subplots above we can tell:**\n",
    "   * More women attended their appointments than men for most of the age ranges\n",
    "   * The highest frequency age , for attendance, is within infants."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.7983626653891136, 0.8023179760876958, -0.003955310698582237)"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Statistical analysis for correlation\n",
    "Women.NoShow.mean(), Men.NoShow.mean(), Women.NoShow.mean() - Men.NoShow.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(37.097351454318996, 38.91748509912779, 33.71789236846924)"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.Age.mean(), Women.Age.mean(), Men.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(37.0, 39.0, 33.0)"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.Age.median(), Women.Age.median(), Men.Age.median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8076fccba8>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_clean.Age[there].hist()\n",
    "df_clean.Age[gone].hist()\n",
    "# Add title and axis names\n",
    "plt.title('Age of Patients by Attendance')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Count of Appointments');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Based on the subplots above we can tell:**\n",
    "  * The distribution of age based on attendance is similar.\n",
    "  * More than double the amount who did not show were present."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(37.80030002519295, 34.28999359736577)"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_clean.Age[there].mean(), df_clean.Age[gone].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "\n",
    "> Is a person with welfare more likely to go to an appointment than someone without welfare?\n",
    "\n",
    "- In order to answer this question I took the average percent of those attending for those with welfare and without. The value of those attending appointments, for those with welfare, was approximately 4% lower than the value for those without. From this I conclude that having welfare does not make you more likely to attend your medical appointment.\n",
    "\n",
    "> Does the patient's age or gender increase the chance of them attending the appointment?\n",
    "- In order to answer this question I took a look at the age distribution of the genders using a scatterplot. I also compared the mean values of the genders. The difference in means is negligible. It is less than 1%. The average age for those who are likely to keep their appointment is 3 years higher than those not attending. The plotted distributions have similar shapes with the exception of the ratio of 0-10 in comparison to the other age groups. From age 0-10 the patients were more likely to be there than any other age group where as"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Limitations \n",
    "   * This sample is too small to represent the population(Brazilian community)\n",
    "   * Without prior knowledge of the data its hard to tell if the ages are innacurate or factual\n",
    "   * The time frame of the data isn't enough to make an inference from for trends or otherwise."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> **Tip**: Once you are satisfied with your work here, check over your report to make sure that it is satisfies all the areas of the rubric (found on the project submission page at the end of the lesson). You should also probably remove all of the \"Tips\" like this one so that the presentation is as polished as possible.\n",
    "\n",
    "## Submitting your Project \n",
    "\n",
    "> Before you submit your project, you need to create a .html or .pdf version of this notebook in the workspace here. To do that, run the code cell below. If it worked correctly, you should get a return code of 0, and you should see the generated .html file in the workspace directory (click on the orange Jupyter icon in the upper left).\n",
    "\n",
    "> Alternatively, you can download this report as .html via the **File** > **Download as** submenu, and then manually upload it into the workspace directory by clicking on the orange Jupyter icon in the upper left, then using the Upload button.\n",
    "\n",
    "> Once you've done this, you can submit your project by clicking on the \"Submit Project\" button in the lower right here. This will create and submit a zip file with this .ipynb doc and the .html or .pdf version you created. Congratulations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from subprocess import call\n",
    "call(['python', '-m', 'nbconvert', 'Investigate_a_Dataset.ipynb'])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
